ARG MPS_VERSION
# If the version of modelix/projector-mps is missing, run docker-build-projector-mps.sh to build and publish that image
FROM modelix/projector-mps:$MPS_VERSION AS with-zip
USER root
RUN apt-get update  \
    && apt-get install unzip zip -y  \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /var/cache/apt

FROM with-zip AS patch-branding

COPY patch-branding.sh /
RUN /patch-branding.sh

FROM with-zip

COPY install-plugins.sh /
COPY --from=patch-branding /branding.zip /projector/ide/lib/branding.jar

RUN echo "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5071" >> /projector/ide/bin/mps64.vmoptions \
    && sed -i.bak '/-Xmx/d' /projector/ide/bin/mps64.vmoptions \
    && echo "-XX:MaxRAMPercentage=85" >> /projector/ide/bin/mps64.vmoptions \
    && mkdir -p /mps-plugins \
    && mkdir -p /mps-languages \
    && chown -R projector-user:projector-user /home/projector-user \
    && chown -R projector-user:projector-user /mps-plugins \
    && chown -R projector-user:projector-user /mps-languages \
    && chown -R projector-user:projector-user /projector/ide/

USER projector-user

COPY --chown=projector-user:projector-user projector-user-home /home/projector-user
# rename config directory to match the correct MPS version
RUN mv "/home/projector-user/.config/JetBrains/MPSxxxx.x" "/home/projector-user/.config/JetBrains/MPS$(grep "mpsBootstrapCore.version=" /projector/ide/build.properties|cut -d'=' -f2)"

COPY --chown=projector-user:projector-user log.xml /projector/ide/bin/log.xml

COPY --chown=projector-user:projector-user artifacts/de.itemis.mps.extensions/ /mps-plugins/MPS-extensions
COPY --chown=projector-user:projector-user build/org.modelix/build/artifacts/org.modelix/plugins/ /mps-plugins/modelix

RUN /install-plugins.sh /projector/ide/plugins/
